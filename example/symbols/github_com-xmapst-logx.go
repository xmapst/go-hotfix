// Code generated by 'yaegi extract github.com/xmapst/logx'. DO NOT EDIT.

package symbols

import (
	"github.com/xmapst/logx"
	"go.uber.org/zap"
	"go.uber.org/zap/zapcore"
	"reflect"
)

func init() {
	Symbols["github.com/xmapst/logx/logx"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"CloseLogger":              reflect.ValueOf(logx.CloseLogger),
		"DPanic":                   reflect.ValueOf(logx.DPanic),
		"DPanicf":                  reflect.ValueOf(logx.DPanicf),
		"DPanicln":                 reflect.ValueOf(logx.DPanicln),
		"DPanicw":                  reflect.ValueOf(logx.DPanicw),
		"DPanicx":                  reflect.ValueOf(logx.DPanicx),
		"Debug":                    reflect.ValueOf(logx.Debug),
		"Debugf":                   reflect.ValueOf(logx.Debugf),
		"Debugln":                  reflect.ValueOf(logx.Debugln),
		"Debugw":                   reflect.ValueOf(logx.Debugw),
		"Debugx":                   reflect.ValueOf(logx.Debugx),
		"DefaultConfig":            reflect.ValueOf(&logx.DefaultConfig).Elem(),
		"Error":                    reflect.ValueOf(logx.Error),
		"Errorf":                   reflect.ValueOf(logx.Errorf),
		"Errorln":                  reflect.ValueOf(logx.Errorln),
		"Errorw":                   reflect.ValueOf(logx.Errorw),
		"Errorx":                   reflect.ValueOf(logx.Errorx),
		"Fatal":                    reflect.ValueOf(logx.Fatal),
		"Fatalf":                   reflect.ValueOf(logx.Fatalf),
		"Fatalln":                  reflect.ValueOf(logx.Fatalln),
		"Fatalw":                   reflect.ValueOf(logx.Fatalw),
		"Fatalx":                   reflect.ValueOf(logx.Fatalx),
		"GetSubLogger":             reflect.ValueOf(logx.GetSubLogger),
		"GetSubLoggerWithKeyValue": reflect.ValueOf(logx.GetSubLoggerWithKeyValue),
		"GetSubLoggerWithOption":   reflect.ValueOf(logx.GetSubLoggerWithOption),
		"Info":                     reflect.ValueOf(logx.Info),
		"Infof":                    reflect.ValueOf(logx.Infof),
		"Infoln":                   reflect.ValueOf(logx.Infoln),
		"Infow":                    reflect.ValueOf(logx.Infow),
		"Infox":                    reflect.ValueOf(logx.Infox),
		"Panic":                    reflect.ValueOf(logx.Panic),
		"Panicf":                   reflect.ValueOf(logx.Panicf),
		"Panicln":                  reflect.ValueOf(logx.Panicln),
		"Panicw":                   reflect.ValueOf(logx.Panicw),
		"Panicx":                   reflect.ValueOf(logx.Panicx),
		"SetLevel":                 reflect.ValueOf(logx.SetLevel),
		"SetupConsoleLogger":       reflect.ValueOf(logx.SetupConsoleLogger),
		"SetupJSONLogger":          reflect.ValueOf(logx.SetupJSONLogger),
		"SetupLogger":              reflect.ValueOf(logx.SetupLogger),
		"Warn":                     reflect.ValueOf(logx.Warn),
		"Warnf":                    reflect.ValueOf(logx.Warnf),
		"Warning":                  reflect.ValueOf(logx.Warning),
		"Warningf":                 reflect.ValueOf(logx.Warningf),
		"Warningln":                reflect.ValueOf(logx.Warningln),
		"Warningw":                 reflect.ValueOf(logx.Warningw),
		"Warningx":                 reflect.ValueOf(logx.Warningx),
		"Warnln":                   reflect.ValueOf(logx.Warnln),
		"Warnw":                    reflect.ValueOf(logx.Warnw),
		"Warnx":                    reflect.ValueOf(logx.Warnx),

		// type definitions
		"Logger": reflect.ValueOf((*logx.Logger)(nil)),

		// interface wrapper definitions
		"_Logger": reflect.ValueOf((*_github_com_xmapst_logx_Logger)(nil)),
	}
}

// _github_com_xmapst_logx_Logger is an interface wrapper for Logger type
type _github_com_xmapst_logx_Logger struct {
	IValue                    interface{}
	WDPanic                   func(a0 ...interface{})
	WDPanicf                  func(a0 string, a1 ...interface{})
	WDPanicln                 func(a0 ...interface{})
	WDPanicw                  func(a0 string, a1 ...interface{})
	WDPanicx                  func(a0 string, a1 ...zapcore.Field)
	WDebug                    func(a0 ...interface{})
	WDebugf                   func(a0 string, a1 ...interface{})
	WDebugln                  func(a0 ...interface{})
	WDebugw                   func(a0 string, a1 ...interface{})
	WDebugx                   func(a0 string, a1 ...zapcore.Field)
	WError                    func(a0 ...interface{})
	WErrorf                   func(a0 string, a1 ...interface{})
	WErrorln                  func(a0 ...interface{})
	WErrorw                   func(a0 string, a1 ...interface{})
	WErrorx                   func(a0 string, a1 ...zapcore.Field)
	WFatal                    func(a0 ...interface{})
	WFatalf                   func(a0 string, a1 ...interface{})
	WFatalln                  func(a0 ...interface{})
	WFatalw                   func(a0 string, a1 ...interface{})
	WFatalx                   func(a0 string, a1 ...zapcore.Field)
	WGetSubLogger             func() logx.Logger
	WGetSubLoggerWithKeyValue func(a0 map[string]string) logx.Logger
	WGetSubLoggerWithOption   func(a0 ...zap.Option) logx.Logger
	WInfo                     func(a0 ...interface{})
	WInfof                    func(a0 string, a1 ...interface{})
	WInfoln                   func(a0 ...interface{})
	WInfow                    func(a0 string, a1 ...interface{})
	WInfox                    func(a0 string, a1 ...zapcore.Field)
	WPanic                    func(a0 ...interface{})
	WPanicf                   func(a0 string, a1 ...interface{})
	WPanicln                  func(a0 ...interface{})
	WPanicw                   func(a0 string, a1 ...interface{})
	WPanicx                   func(a0 string, a1 ...zapcore.Field)
	WPrint                    func(a0 ...interface{})
	WPrintf                   func(a0 string, a1 ...interface{})
	WPrintln                  func(a0 ...interface{})
	WPrintw                   func(a0 string, a1 ...interface{})
	WPrintx                   func(a0 string, a1 ...zapcore.Field)
	WWarn                     func(a0 ...interface{})
	WWarnf                    func(a0 string, a1 ...interface{})
	WWarning                  func(a0 ...interface{})
	WWarningf                 func(a0 string, a1 ...interface{})
	WWarningln                func(a0 ...interface{})
	WWarningw                 func(a0 string, a1 ...interface{})
	WWarningx                 func(a0 string, a1 ...zapcore.Field)
	WWarnln                   func(a0 ...interface{})
	WWarnw                    func(a0 string, a1 ...interface{})
	WWarnx                    func(a0 string, a1 ...zapcore.Field)
}

func (W _github_com_xmapst_logx_Logger) DPanic(a0 ...interface{}) {
	W.WDPanic(a0...)
}
func (W _github_com_xmapst_logx_Logger) DPanicf(a0 string, a1 ...interface{}) {
	W.WDPanicf(a0, a1...)
}
func (W _github_com_xmapst_logx_Logger) DPanicln(a0 ...interface{}) {
	W.WDPanicln(a0...)
}
func (W _github_com_xmapst_logx_Logger) DPanicw(a0 string, a1 ...interface{}) {
	W.WDPanicw(a0, a1...)
}
func (W _github_com_xmapst_logx_Logger) DPanicx(a0 string, a1 ...zapcore.Field) {
	W.WDPanicx(a0, a1...)
}
func (W _github_com_xmapst_logx_Logger) Debug(a0 ...interface{}) {
	W.WDebug(a0...)
}
func (W _github_com_xmapst_logx_Logger) Debugf(a0 string, a1 ...interface{}) {
	W.WDebugf(a0, a1...)
}
func (W _github_com_xmapst_logx_Logger) Debugln(a0 ...interface{}) {
	W.WDebugln(a0...)
}
func (W _github_com_xmapst_logx_Logger) Debugw(a0 string, a1 ...interface{}) {
	W.WDebugw(a0, a1...)
}
func (W _github_com_xmapst_logx_Logger) Debugx(a0 string, a1 ...zapcore.Field) {
	W.WDebugx(a0, a1...)
}
func (W _github_com_xmapst_logx_Logger) Error(a0 ...interface{}) {
	W.WError(a0...)
}
func (W _github_com_xmapst_logx_Logger) Errorf(a0 string, a1 ...interface{}) {
	W.WErrorf(a0, a1...)
}
func (W _github_com_xmapst_logx_Logger) Errorln(a0 ...interface{}) {
	W.WErrorln(a0...)
}
func (W _github_com_xmapst_logx_Logger) Errorw(a0 string, a1 ...interface{}) {
	W.WErrorw(a0, a1...)
}
func (W _github_com_xmapst_logx_Logger) Errorx(a0 string, a1 ...zapcore.Field) {
	W.WErrorx(a0, a1...)
}
func (W _github_com_xmapst_logx_Logger) Fatal(a0 ...interface{}) {
	W.WFatal(a0...)
}
func (W _github_com_xmapst_logx_Logger) Fatalf(a0 string, a1 ...interface{}) {
	W.WFatalf(a0, a1...)
}
func (W _github_com_xmapst_logx_Logger) Fatalln(a0 ...interface{}) {
	W.WFatalln(a0...)
}
func (W _github_com_xmapst_logx_Logger) Fatalw(a0 string, a1 ...interface{}) {
	W.WFatalw(a0, a1...)
}
func (W _github_com_xmapst_logx_Logger) Fatalx(a0 string, a1 ...zapcore.Field) {
	W.WFatalx(a0, a1...)
}
func (W _github_com_xmapst_logx_Logger) GetSubLogger() logx.Logger {
	return W.WGetSubLogger()
}
func (W _github_com_xmapst_logx_Logger) GetSubLoggerWithKeyValue(a0 map[string]string) logx.Logger {
	return W.WGetSubLoggerWithKeyValue(a0)
}
func (W _github_com_xmapst_logx_Logger) GetSubLoggerWithOption(a0 ...zap.Option) logx.Logger {
	return W.WGetSubLoggerWithOption(a0...)
}
func (W _github_com_xmapst_logx_Logger) Info(a0 ...interface{}) {
	W.WInfo(a0...)
}
func (W _github_com_xmapst_logx_Logger) Infof(a0 string, a1 ...interface{}) {
	W.WInfof(a0, a1...)
}
func (W _github_com_xmapst_logx_Logger) Infoln(a0 ...interface{}) {
	W.WInfoln(a0...)
}
func (W _github_com_xmapst_logx_Logger) Infow(a0 string, a1 ...interface{}) {
	W.WInfow(a0, a1...)
}
func (W _github_com_xmapst_logx_Logger) Infox(a0 string, a1 ...zapcore.Field) {
	W.WInfox(a0, a1...)
}
func (W _github_com_xmapst_logx_Logger) Panic(a0 ...interface{}) {
	W.WPanic(a0...)
}
func (W _github_com_xmapst_logx_Logger) Panicf(a0 string, a1 ...interface{}) {
	W.WPanicf(a0, a1...)
}
func (W _github_com_xmapst_logx_Logger) Panicln(a0 ...interface{}) {
	W.WPanicln(a0...)
}
func (W _github_com_xmapst_logx_Logger) Panicw(a0 string, a1 ...interface{}) {
	W.WPanicw(a0, a1...)
}
func (W _github_com_xmapst_logx_Logger) Panicx(a0 string, a1 ...zapcore.Field) {
	W.WPanicx(a0, a1...)
}
func (W _github_com_xmapst_logx_Logger) Print(a0 ...interface{}) {
	W.WPrint(a0...)
}
func (W _github_com_xmapst_logx_Logger) Printf(a0 string, a1 ...interface{}) {
	W.WPrintf(a0, a1...)
}
func (W _github_com_xmapst_logx_Logger) Println(a0 ...interface{}) {
	W.WPrintln(a0...)
}
func (W _github_com_xmapst_logx_Logger) Printw(a0 string, a1 ...interface{}) {
	W.WPrintw(a0, a1...)
}
func (W _github_com_xmapst_logx_Logger) Printx(a0 string, a1 ...zapcore.Field) {
	W.WPrintx(a0, a1...)
}
func (W _github_com_xmapst_logx_Logger) Warn(a0 ...interface{}) {
	W.WWarn(a0...)
}
func (W _github_com_xmapst_logx_Logger) Warnf(a0 string, a1 ...interface{}) {
	W.WWarnf(a0, a1...)
}
func (W _github_com_xmapst_logx_Logger) Warning(a0 ...interface{}) {
	W.WWarning(a0...)
}
func (W _github_com_xmapst_logx_Logger) Warningf(a0 string, a1 ...interface{}) {
	W.WWarningf(a0, a1...)
}
func (W _github_com_xmapst_logx_Logger) Warningln(a0 ...interface{}) {
	W.WWarningln(a0...)
}
func (W _github_com_xmapst_logx_Logger) Warningw(a0 string, a1 ...interface{}) {
	W.WWarningw(a0, a1...)
}
func (W _github_com_xmapst_logx_Logger) Warningx(a0 string, a1 ...zapcore.Field) {
	W.WWarningx(a0, a1...)
}
func (W _github_com_xmapst_logx_Logger) Warnln(a0 ...interface{}) {
	W.WWarnln(a0...)
}
func (W _github_com_xmapst_logx_Logger) Warnw(a0 string, a1 ...interface{}) {
	W.WWarnw(a0, a1...)
}
func (W _github_com_xmapst_logx_Logger) Warnx(a0 string, a1 ...zapcore.Field) {
	W.WWarnx(a0, a1...)
}
